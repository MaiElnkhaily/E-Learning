@model ELearningManagementSystem.Models.Student
@{
    ViewBag.Title = "EditStudent";
    ViewBag.Title = "DeptList";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<div id="page-wrapper" onLoad="noBack();" onpageshow="if (event.persisted) noBack();" onUnload="">
    <div class="container-fluid">
        <!-- Page Heading -->
        <div class="row" id="main">
            <div class="col-sm-12 col-md-12 well" id="content">
                <!--start edit profile-->
                <section class="edit-student">
                    <div class="container">
                        <h1>Edit student Profile</h1>
                        <hr>

                        <!-- edit form column -->
                        <div class="col-md-9 personal-info">
                            <div class="alert alert-danger text-center" style="width:100%;display:none" id="error">@ViewBag.error</div>

                            @using (Html.BeginForm("EditStudent", "Admin", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal " }))
                            {
                                @Html.HiddenFor(w => w.Student_Code)
                                @Html.HiddenFor(w => w.Photo)
                                @Html.HiddenFor(w => w.Admin_Id)
                                @Html.HiddenFor(w => w.Visible)
                                @Html.HiddenFor(w => w.Gender)
                                @Html.HiddenFor(w => w.Type)
                                @Html.HiddenFor(w => w.BirthDate)

                                @*<form class="form-horizontal" role="form">*@

                                <div class="form-group">
                                    <label class="col-lg-3 control-label"> Name:</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(q => q.Personal_Name, new { @class = "form-control", required = "required", placeholder = "Enter name" })
                                        @Html.ValidationMessageFor(w => w.Personal_Name, "", new { style = "color:red;" })

                                        @*<input class="form-control" type="text" value="" placeholder="Enter name">*@
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-lg-3 control-label">Username:</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(a => a.UserName, new { @Value = Model.UserName, @class = "form-control", required = "required", placeholder = "Enter username", id = "un" })
                                        @Html.ValidationMessageFor(w => w.UserName, "", new { style = "color:red;" })
                                        @*<input class="form-control" type="text" placeholder="Enter username" value="">*@
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Password:</label>
                                    <div class="col-md-8">
                                        @Html.PasswordFor(z => z.Password, new { @class = "form-control", required = "required", placeholder = "Enter password" })
                                        @Html.ValidationMessageFor(w => w.Password, "", new { style = "color:red;" })

                                        @*<input class="form-control" type="password" placeholder="Enter password" value="">*@
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Confirm Password:</label>
                                    <div class="col-md-8">
                                        @Html.PasswordFor(e => e.CPassword, new { @class = "form-control", required = "required", placeholder = "Confirm password" })
                                        @Html.ValidationMessageFor(w => w.CPassword, "", new { style = "color:red;" })
                                        @*<input class="form-control" type="password" placeholder="Confirm password" value="">*@
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-lg-3 control-label">Email:</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(s => s.E_Mail, new { @Value = Model.E_Mail, @class = "form-control", type = "email", required = "required", placeholder = "Enter email" })
                                        @Html.ValidationMessageFor(w => w.E_Mail, "", new { style = "color:red;" })
                                        @*<input class="form-control" type="email" placeholder="Enter email" value="">*@
                                    </div>
                                </div>
                                @*<div class="form-group">
                                        <label class="col-md-3 control-label">Birthday:</label>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(z => z.BirthDate, new { @Value = Model.BirthDate, @class = "form-control", type = "date", required = "required" })
                                            @Html.ValidationMessageFor(w => w.BirthDate, "", new { style = "color:red;" })
                                            @*<input class="form-control" type="date" placeholder="" value="">
                                        </div>
                                    </div>*@
                                @*<div class="form-group">
                                        <label class="col-md-3 control-label">Phone:</label>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(l=>l.p)
                                            <input class="form-control" type="tel" placeholder="Enter phone number" value="">
                                        </div>
                                    </div>*@
                                @*<div class="form-group">
                                                <label class="col-md-3 control-label">Gender: </label>
                                                <div class="col-md-8">
                                                    <div class="selector">
                                                        <select required>
                                        <option selected value="0">male</option>
                                        <option value="1">female</option>
                                    </select>
                                                        @Html.DropDownList("Gender", new SelectList(Enum.GetValues(typeof(ELearningManagementSystem.Models.Gender))), new { @class = "form-control" })
                                                    </div>
                                                </div>
                                            </div>*@
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Department: </label>
                                    <div class="col-md-8">
                                        <div class="selector">
                                            @*<select required>
                                                    <option selected value="0">IS</option>
                                                    <option value="1">CS</option>
                                                </select>*@

                                            @Html.DropDownListFor(q => q.Dept_Id, ViewBag.DeptList as SelectList, new { @class = "form-control", required = "required" })
                                            @Html.ValidationMessageFor(w => w.Dept_Id, "", new { style = "color:red;" })

                                        </div>
                                    </div>
                                </div>
                                @*<div class="form-group">
                                                <label class="col-md-3 control-label">Class </label>
                                                <div class="col-md-8">
                                                    <div class="selector">
                                                        <select required>
                                        <option selected value="0">1</option>
                                        <option value="1">2</option>
                                        <option value="2">3</option>
                                        <option value="3">4</option>
                                    </select>
                                                        @Html.DropDownList("Calss", new SelectList(Enum.GetValues(typeof(ELearningManagementSystem.Models.Calss))), new { @class = "form-control" })

                                                    </div>
                                                </div>
                                            </div>*@
                                <div class="form-group">
                                    <label class="col-lg-3 control-label"></label>
                                    <div class="col-lg-8">
                                        <input type="submit" class="btn btn-success" id="save" style="margin-right: 5px;">
                                        <span></span>
                                        @Html.ActionLink("Back", null, null, null, new { @class = "btn btn-danger", @id = "cancel", href = Request.UrlReferrer })
                                        @*<input type="button" class="btn btn-danger" value="Back">*@
                                    </div>
                                </div>
                            }

                        </div>

                    </div>
                </section>
            </div>
            <hr>

            <!--end edit profile-->
        </div>
    </div>
    <!-- /.row -->
</div>
<!-- /.container-fluid -->
<!-- /#page-wrapper -->
<!--end nav-->
@section script{

    <script>
        var err = document.getElementById("error");
        var un = document.getElementById("un");
        if (err.innerText != "") {

            err.style.display = "block";
        }

        un.addEventListener("click", function () {

            err.style.display = "none";
        })
    </script>

    <script type="text/javascript">
        window.history.forward();
        function noBack() {
            window.history.forward();
        }
    </script>


}
